name: Security Testing

on: [push, pull_request]

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Scan for vulnerabilities in dependencies
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Run OWASP ZAP baseline scan (this doesn't require the app to be running)
      - name: OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.9.0
        with:
          target: "https://www.example.com"
          cmd_options: "-J zap-report.json"
          allow_issue_writing: false

      - name: Create Summary
        if: always()
        run: |
          echo "# Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "## OWASP ZAP Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "### Passed Checks ✅" >> $GITHUB_STEP_SUMMARY
          grep "PASS:" zap-report.txt | sed 's/PASS: /- /' >> $GITHUB_STEP_SUMMARY
          echo "### Warnings ⚠️" >> $GITHUB_STEP_SUMMARY
          grep "WARN-NEW:" zap-report.txt | sed 's/WARN-NEW: /- /' >> $GITHUB_STEP_SUMMARY
          echo "### Failures ❌" >> $GITHUB_STEP_SUMMARY
          grep "FAIL-NEW:" zap-report.txt | sed 's/FAIL-NEW: /- /' >> $GITHUB_STEP_SUMMARY

      # SonarCloud Analysis (static code analysis)
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            zap-report.*
            ./snyk-report
